#!/usr/bin/env bash

# script_path="$(cd "$(dirname "$0")" && pwd)"
script_path="$(dirname "$(readlink -f "$0")")"
path_conf="${HOME}/.config/winapps"
path_share="${HOME}/.local/share/winapps"
# path_conf_home="${HOME}/.winapps"
file_conf="${path_conf}/winapps.conf"

debug_log() {
    if [ "${DEBUG}" = "true" ]; then
        echo "[$(date)-${RANDOM}] $*" >>"$path_share/winapps.log"
    fi
}

[ -d "$path_conf" ] || mkdir -p "$path_conf"
[ -d "${path_share}" ] || mkdir -p "$path_share"
if [ -f "$file_conf" ]; then
    source "${file_conf}"
else
    cp "$script_path/../docs/winapps-example.conf" "$file_conf"
    echo "Change $file_conf configuration. Exiting..."
    exit
fi

# determine whether the user has sudo permission
current_user=$(whoami)
if [ "$current_user" = "root" ]; then
    pre_sudo=''
else
    has_root_permission=$(sudo -l -U "$current_user" | grep "ALL")
    if [ -n "$has_root_permission" ]; then
        echo "User $current_user has sudo permission."
        pre_sudo="sudo"
    else
        echo "User $current_user has no sudo permission."
        echo "Won't install xfreerdp automatically."
        # exit 1
    fi
fi

## yum or apt
if command -v apt; then
    install_cmd="$pre_sudo apt"
elif command -v yum; then
    install_cmd="$pre_sudo yum"
elif command -v dnf; then
    install_cmd="$pre_sudo dnf"
else
    echo "not found apt/yum/dnf"
    # exit 1
fi

if ! command -v xfreerdp >/dev/null; then
    echo "Try install xfreerdp..."
    if $install_cmd install -y freerdp2-x11; then
        echo "Installed xfreerdp"
    else
        echo "You need xfreerdp!"
        echo "  $install_cmd install -y freerdp2-x11"
        exit
    fi
fi

debug_log "START"

last_run=$(stat -t -c %Y "$path_share/run")
debug_log "last_run:${last_run}"
touch "$path_share/run"
this_run=$(stat -t -c %Y "$path_share/run")
debug_log "this_run:${this_run}"
if ((this_run - last_run < 2)); then
    echo "time too short"
    exit 1
fi

RDP_NAME="${RDP_NAME:-RDPWindows}"

if [ -z "${RDP_IP}" ]; then
    if ! groups | grep -q libvirt; then
        echo "You are not a member of the libvirt group. Run the below then reboot."
        echo "  sudo usermod -a -G libvirt $(whoami)"
        echo "  sudo usermod -a -G kvm $(whoami)"
        exit
    fi

    if ! virsh list | grep -q "${RDP_NAME}"; then
        echo "${RDP_NAME} is not running, run:"
        echo "  virsh start ${RDP_NAME}"
        exit
    fi
    RDP_IP=$(virsh net-dhcp-leases default | grep "${RDP_NAME}" | awk '{print $5}')
    RDP_IP=${RDP_IP%%\/*}
fi

if [ "${MULTIMON}" = "true" ]; then
    MULTI_FLAG="/multimon"
else
    MULTI_FLAG="/span"
fi

debug_log "@:$*"
arg_1="$1"
arg_2="$2"

xfreerdp_opt="xfreerdp ${RDP_FLAGS} /d:${RDP_DOMAIN} /u:${RDP_USER} /p:${RDP_PASS} /v:${RDP_IP} /cert:ignore +auto-reconnect +clipboard +home-drive -wallpaper /scale:${RDP_SCALE:-100} /dynamic-resolution /sound /microphone"
case "${arg_1}" in
windows)
    $xfreerdp_opt /wm-class:"Microsoft Windows" >/dev/null 2>&1 &
    ;;
check)
    debug_log "CHECK"
    $xfreerdp_opt -decorations ${MULTI_FLAG} /app:"explorer.exe"
    ;;
manual)
    debug_log "MANUAL:${arg_2}"
    $xfreerdp_opt -decorations ${MULTI_FLAG} /app:"${arg_2}" >/dev/null 2>&1 &
    ;;
install)
    :
    ;;
*)
    debug_log "script_path: ${script_path}"
    if [ -e "${script_path}/../apps/${arg_1}/info" ]; then
        ## search from src
        source "${script_path}/../apps/${arg_1}/info"
        ICON="${script_path}/../apps/${arg_1}/icon.svg"
    elif [ -e "$path_share/apps/${arg_1}/info" ]; then
        ## search from user share
        source "$path_share/apps/${arg_1}/info"
        ICON="$path_share/apps/${arg_1}/icon.svg"
    elif [ -e "/usr/local/share/winapps/apps/${arg_1}/info" ]; then
        ## search from sys share
        source "/usr/local/share/winapps/apps/${arg_1}/info"
        ICON="/usr/local/share/winapps/apps/${arg_1}/icon.svg"
    else
        echo "You need to run 'bin/installer.sh' first."
        exit 1
    fi
    if [ -n "${arg_2}" ]; then
        debug_log "HOME:${HOME}"
        FILE=$(echo "${arg_2}" | sed 's|'"${HOME}"'|\\\\tsclient\\home|;s|/|\\|g;s|\\|\\\\|g')
        debug_log "FILE:${FILE}"
        $xfreerdp_opt -decorations ${MULTI_FLAG} /wm-class:"${FULL_NAME}" /app:"${WIN_EXECUTABLE}" /app-icon:"${ICON}" /app-cmd:"\"${FILE}\"" >/dev/null 2>&1 &
    else
        $xfreerdp_opt -decorations ${MULTI_FLAG} /wm-class:"${FULL_NAME}" /app:"${WIN_EXECUTABLE}" /app-icon:"${ICON}" 1>/dev/null 2>&1 &
    fi
    ;;
esac

debug_log "END"
