#!/usr/bin/env bash

path_script="$(cd "$(dirname "$0")" && pwd)"
# DIR="$(dirname "$(readlink -f "$0")")"
path_conf="${HOME}/.config/winapps"
path_share="${HOME}/.local/share/winapps"
# path_conf_home="${HOME}/.winapps"
file_conf="${path_conf}/winapps.conf"

debug_log() {
    if [ "${DEBUG}" = "true" ]; then
        echo "[$(date)-${RANDOM}] $*" >>"$path_share/winapps.log"
    fi
}

[ -d "$path_conf" ] || mkdir -p "$path_conf"
[ -d "${path_share}" ] || mkdir -p "$path_share"
if [ -f "$file_conf" ]; then
    source "${file_conf}"
else
    cp "$path_script/../docs/winapps-example.conf" "$file_conf"
    echo "You need to modify $file_conf configuration. Exiting..."
    exit
fi

if ! command -v xfreerdp >/dev/null; then
    if sudo apt-get install -y freerdp2-x11; then
        echo "Installed xfreerdp"
    else
        echo "You need xfreerdp!"
        echo "  sudo apt-get install -y freerdp2-x11"
        exit
    fi
fi

debug_log "START"

last_run=$(stat -t -c %Y "$path_share/run")
debug_log "last_run:${last_run}"
touch "$path_share/run"
this_run=$(stat -t -c %Y "$path_share/run")
debug_log "this_run:${this_run}"
if ((this_run - last_run < 2)); then
    echo "time too short"
    exit 1
fi

RDP_NAME="${RDP_NAME:-RDPWindows}"

if [ -z "${RDP_IP}" ]; then
    if ! groups | grep -q libvirt; then
        echo "You are not a member of the libvirt group. Run the below then reboot."
        echo "  sudo usermod -a -G libvirt \$(whoami)"
        echo "  sudo usermod -a -G kvm \$(whoami)"
        exit
    fi

    if ! virsh list | grep -q "${RDP_NAME}"; then
        echo "${RDP_NAME} is not running, run:"
        echo "  virsh start ${RDP_NAME}"
        exit
    fi
    RDP_IP=$(virsh net-dhcp-leases default | grep "${RDP_NAME}" | awk '{print $5}')
    RDP_IP=${RDP_IP%%\/*}
fi

if [ "${MULTIMON}" = "true" ]; then
    MULTI_FLAG="/multimon"
else
    MULTI_FLAG="/span"
fi

debug_log "1:${1}"
debug_log "2:${2}"
debug_log "@:$*"

xfreerdp_opt="xfreerdp ${RDP_FLAGS} /d:${RDP_DOMAIN} /u:${RDP_USER} /p:${RDP_PASS} /v:${RDP_IP} -decorations /cert:ignore +auto-reconnect +clipboard +home-drive -wallpaper /scale:${RDP_SCALE:-100} /dynamic-resolution"
case $1 in
windows)
    $xfreerdp_opt /wm-class:"Microsoft Windows" >/dev/null 2>&1 &
    ;;
check)
    debug_log "CHECK"
    $xfreerdp_opt ${MULTI_FLAG} /app:"explorer.exe"
    ;;
manual)
    debug_log "MANUAL:${2}"
    $xfreerdp_opt ${MULTI_FLAG} /app:"${2}" >/dev/null 2>&1 &
    ;;
install)
    :
    ;;
*)
    debug_log "path_script: ${path_script}"
    if [ -e "${path_script}/../apps/${1}/info" ]; then
        source "${path_script}/../apps/${1}/info"
        ICON="${path_script}/../apps/${1}/icon.svg"
    elif [ -e "$path_share/apps/${1}/info" ]; then
        source "$path_share/apps/${1}/info"
        ICON="$path_share/apps/${1}/icon.svg"
    elif [ -e "/usr/local/share/winapps/apps/${1}/info" ]; then
        source "/usr/local/share/winapps/apps/${1}/info"
        ICON="/usr/local/share/winapps/apps/${1}/icon.svg"
    else
        echo "You need to run 'installer.sh' first."
        exit 1
    fi
    if [ -n "${2}" ]; then
        debug_log "HOME:${HOME}"
        FILE=$(echo "${2}" | sed 's|'"${HOME}"'|\\\\tsclient\\home|;s|/|\\|g;s|\\|\\\\|g')
        debug_log "FILE:${FILE}"
        $xfreerdp_opt ${MULTI_FLAG} /wm-class:"${FULL_NAME}" /app:"${WIN_EXECUTABLE}" /app-icon:"${ICON}" /app-cmd:"\"${FILE}\"" >/dev/null 2>&1 &
    else
        $xfreerdp_opt ${MULTI_FLAG} /wm-class:"${FULL_NAME}" /app:"${WIN_EXECUTABLE}" /app-icon:"${ICON}" 1>/dev/null 2>&1 &
    fi
    ;;
esac

debug_log "END"
